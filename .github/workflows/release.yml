name: Release

on:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: tag-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure full history for Commitizen

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - uses: abatilo/actions-poetry@v3

      - name: Install dependencies
        run: poetry install --no-root

      - name: Determine if version is bumped
        id: version_check
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          CURRENT_VERSION=$(poetry version --short)
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Strip leading 'v' from GITHUB_REF_NAME (like 'v1.2.3' -> '1.2.3')
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "tag=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Run Commitizen bump and changelog if needed
        if: steps.version_check.outputs.current != steps.version_check.outputs.tag
        env:
          TAG_VERSION: ${{ steps.version_check.outputs.tag }}
        run: |
          poetry run cz bump --yes --changelog
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add pyproject.toml CHANGELOG.md
          git commit -m "ci(release): bump version to $TAG_VERSION"
          git push origin HEAD:main

      - name: Build package
        run: poetry build


  pypi-publish:
    runs-on: ubuntu-latest

    needs:
      - release-build

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi

    steps:
      - name: Publish to PyPI via Trusted Publishing
        run: poetry publish --no-interaction --build
